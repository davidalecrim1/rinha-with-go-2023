services:
  go-app-1:
   <<: &go-app1-config
    container_name: go-app-1
    build:
      context: .
      dockerfile: Dockerfile
    network_mode: host
    environment:
      - LOG_LEVEL=INFO
      - PORT=8081
      - DB_HOST=localhost
      - DB_USER=admin
      - DB_PASSWORD=password
      - DB_PORT=5432
      - DB_SCHEMA=people
      - DB_MAX_CONN=50
      - CACHE_HOST=localhost
      - CACHE_PORT=6379
    depends_on:
      - postgres-db
      - redis-cache
    deploy:
      resources:
        limits:
          cpus: '0.125'
          memory: '0.5GB'
  go-app-2:
    <<: *go-app1-config
    container_name: go-app-2
    environment:
      - LOG_LEVEL=INFO
      - PORT=8082
      - DB_HOST=localhost
      - DB_USER=admin
      - DB_PASSWORD=password
      - DB_PORT=5432
      - DB_SCHEMA=people
      - DB_MAX_CONN=50
      - CACHE_HOST=localhost
      - CACHE_PORT=6379
  nginx:
    container_name: nginx
    image: nginx:1.27.1-alpine
    volumes:
      - ./nginx.linux.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - go-app-1
      - go-app-2
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.125'
          memory: '0.5GB'
  postgres-db:
    image: postgres:16.4-alpine3.20
    container_name: postgres-db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: people
      POSTGRES_PORT: 5432
    volumes:
    - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    command:
      ["postgres","-c","config_file=/docker-entrypoint-initdb.d/postgresql.conf"]
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1.2GB'
  redis-cache:
    image: redis:7.4-alpine
    container_name: redis-cache
    deploy:
      resources:
        limits:
          cpus: '0.125'
          memory: '0.3GB'
    network_mode: host

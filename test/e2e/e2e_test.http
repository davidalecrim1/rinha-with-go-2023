# Tests using the docker-compose-dev.yml

POST http://localhost:8080/pessoas

{
    "apelido" : "ana",
    "nome" : "Ana Barbosa",
    "nascimento" : "1985-09-23",
    "stack" : ["Python"]
}
// Expected: 200

POST http://localhost:8080/pessoas

{
    "apelido" : "johndoe",
    "nome" : "John Doe",
    "nascimento" : "1985-09-23",
    "stack" : ["Python", "Node"]
}
// Expected: 200

POST http://localhost:8080/pessoas

{
    "apelido" : "aninha",
    "nome" : "Ana Oliveira",
    "nascimento" : "1985-09-23",
    "stack" : null
}
// Expected: 200

POST http://localhost:8080/pessoas

{
    "apelido" : "ana",
    "nome" : null, // não pode ser null
    "nascimento" : "1985-09-23",
    "stack" : null
}
// Expected: 422


POST http://localhost:8080/pessoas

{
    "apelido" : "apelido",
    "nome" : 1, // nome deve ser string e não número
    "nascimento" : "1985-01-01",
    "stack" : null
}
// Expected: 400

GET http://localhost:8080/pessoas/f7379ae8-8f9b-4cd5-8221-51efe19e721b
// Expected: 404

GET http://localhost:8080/pessoas/848fd60b-46be-40c8-8280-d4a0f334a87c
// Expected: 200
// Need to know the UUID in the database or have been inserted

GET http://localhost:8080/pessoas?t=python
// Expected: 200

GET http://localhost:8080/pessoas?t=none
// Expected: 200
// Body: []

GET http://localhost:8080/pessoas?t=
// Expected: 400

GET http://localhost:8080/contagem-pessoas
// Expected: 200

# Tests using the docker-compose-qa.yml

POST http://localhost:9999/pessoas

{
    "apelido" : "ana",
    "nome" : "Ana Barbosa",
    "nascimento" : "1985-09-23",
    "stack" : ["Python"]
}

POST http://localhost:9999/pessoas

{
    "apelido" : "john",
    "nome" : "John Doe",
    "nascimento" : "1985-09-23",
    "stack" : ["Node"]
}

POST http://localhost:9999/pessoas

{
    "apelido" : "markus",
    "nome" : "Markus Santana",
    "nascimento" : "1985-09-23",
    "stack" : ["Node", "Python"]
}

POST http://localhost:9999/pessoas

{
    "apelido" : "joana",
    "nome" : "Joana Santana",
    "nascimento" : "INVALID_DATE",
    "stack" : ["Node", "Python"]
}

GET http://localhost:9999/contagem-pessoas
Connection: keep-alive
# This makes new connections faster given the opened TCP connection.

GET http://localhost:9999/contagem-pessoas
Connection: close 
# This increases the latency given the TCP connection needs to be reopen.

GET http://localhost:9999/pessoas?t=python

GET http://localhost:9999/pessoas?t=node

POST http://localhost:9999/pessoas

{
    "apelido" : "ana",
    "nome" : "Ana Barbosa",
    "nascimento" : "1985-09-23",
    "stack" : ["Python"]
}

GET http://localhost:9999/pessoas/2636d0b0-da9e-4d9e-aeb6-b1f1ba0cf089

GET http://localhost:9999/pessoas?t=mJTySfIOlaCMwZXZUnzwGZVX+pyLLxA